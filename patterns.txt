 
		  int N = 3;

	        for(int i =1 ;i<=N;i++)
	        {
	            for(int j = 1 ; j<=i ;j++)
	            {
	                System.out.print("*");
	            }
	         System.out.print(" ");
	        }
    
output
* ** *** 
==============
 for(int i =1 ;i<=3;i++)
	        {
	            for(int j = 1; j<=3 ;j++)
	            {
	                System.out.print("*");
	            }
	         System.out.println(" ");
	        }

output
*** 
*** 
*** 
=========================
  for(int i =1 ;i<=3;i++)
	        {
	            for(int j = 1; j<=i ;j++)
	            {
	                System.out.print("*");
	            }
	         System.out.println(" ");
	        }

output

* 
** 
*** 
=========================
for(int i =1 ;i<=3;i++)
	        {
	            for(int j = i; j<=3 ;j++)
	            {
	                System.out.print("*");
	            }
	         System.out.println(" ");
	        }
output

*** 
** 
* 
==============================

		  int N =3;
			if(N>=1 && N<=1000)
			{
				for (int i = 1; i <= N; i++)
			        {
			        	
					  for (int j = 1; j <= N; j++)
						 
			  	            {
						   System.out.print("(" + i + "," + j + ") ");
			  	            }
			         System.out.println();
			        }
			}
			 else {
		            System.out.println("N must be between 1 and 1000");
		        }

output

(1,1) (1,2) (1,3) 
(2,1) (2,2) (2,3) 
(3,1) (3,2) (3,3) 
==============================

Write a Program which takes input n and prints the below pattern and upload the code to your github repo.



Sample 1:

Input:

n = 4

Expected output:

4321

321

21

1




---
 int n=6;
	        for(int i=n;i>=1;i--){
	           for(int j=i;j>=1;j--){
	               System.out.print(j);
	           }
	           System.out.println();
	       }
================
   // Upper half
        for (int i = 1; i <= N; i++) {
            System.out.println("* ".repeat(i));
        }

        // Lower half
        for (int i = N - 1; i >= 1; i--) {
            System.out.println("* ".repeat(i));
        }
    }
{or}
for(int i=0;i<n;i++)
        {
	            for(int j=0;j<=i;j++)
	            {
	                System.out.print("* ");
	            }
	            System.out.println();
	        }
	         for(int i=0;i<n-1;i++)
	         {
	            for(int j=0;j<n-i-1;j++)
	            {
	                System.out.print("* ");
	            }
	            System.out.println();
	         }

* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
* 
===========================

// code here
//for (int i = 1; i <= n; i++) {
        //  for (int j=1 ;j<=n-i;j++)
            //  {
            //      System.out.print(" ");
            //      }
                 
            //       for (int j=1 ;j<=2*i-1;j++)
            //       {
            //           System.out.print("*");
            //       }
            //       System.out.println();}
        for (int i = 1 ;i <= N; i++)
        {
            
            System.out.print(" ".repeat(N - i));
            System.out.println("*".repeat(2*i-1));
        }


    *
   ***  
  *****
 *******
*********
====================================
 1
 2 3
 4 5 6
 7 8 9 10
 11 12 13 14 15
 16 17 18 19 20 21
 22 23 24 25 26 27 28
 29 30 31 32 33 34 35 36


int n=8;
		 int num=1;
		 
		 for (int i =1;i<=n;i++)
		 {
			 for (int j =1;j<=i;j++)
			 {
				 System.out.print(" "+num );
				num++;
			 }
			
			 System.out.println();
		 }
		 
================================================


int n = 8;
	
	int num =1;
	
	for (int i= 1;i<=n ;i++)
	{
		for (int j= 1;j<=i ;j++)
		{
			System.out.print(i);
			
		}
		System.out.println();
	}


ans
======
1
22
333
4444
55555
666666
7777777
88888888
